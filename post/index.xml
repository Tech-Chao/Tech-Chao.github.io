<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 咸鱼者说</title>
    <link>https://www.techchao.com/post/</link>
    <description>Recent content in Posts on 咸鱼者说</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Fri, 15 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.techchao.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iOS 性能优化——启动时间</title>
      <link>https://www.techchao.com/post/ios-performance-optimization-reducing-your-apps-launch-time/</link>
      <pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.techchao.com/post/ios-performance-optimization-reducing-your-apps-launch-time/</guid>
      <description>
        
          &lt;blockquote&gt;
&lt;p&gt;本篇是 iOS 性能优化系列的第一篇，讲述关于 App 的启动时长的优化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;用户对于 App 的第一印象就是 App 的启动时长，如果 App 启动的时长过长对于用户的体验可想而知&lt;/p&gt;
&lt;p&gt;在&lt;a href=&#34;https://developer.apple.com/videos/play/wwdc2019/423/&#34;&gt;WWDC 2019 Optimizing App Launch&lt;/a&gt;中的将 App 的启动分为冷启动（Cold）、热启动（Warm）和恢复启动（Resume）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/ios/Lanuch_Types.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;冷启动（Cold）：系统刚重启后、应用没有在内存中、应用的进程并不在系统中，需要系统创建一个进程分配给它，这是一个完整的启动过程&lt;/li&gt;
&lt;li&gt;热启动（Warm）： 应用刚刚结束、应用的部分资源还在内存中，应用进程不在系统中&lt;/li&gt;
&lt;li&gt;复启动（Resume）：APP 没结束，只是暂停，全在内存中，进程也存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们对 App 启动时长的优化一般针对的是 App 的冷启动时长优化，根据 WWDC 的介绍，如果我们将首屏的渲染时间降低到 400ms（系统启动动画时长） 以内，那么用户的体验将会有极大的提升。&lt;/p&gt;
&lt;p&gt;接下来，让我们按步骤一步步来优化启动时长：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;了解App启动的各阶段任务&lt;/li&gt;
&lt;li&gt;分析各阶段任务的时长&lt;/li&gt;
&lt;li&gt;有针对性的优化每个步骤的时长&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同时为了准确的测量 App 的启动时长，我们对测试环境有一定的要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重启手机并放置一段时间&lt;/li&gt;
&lt;li&gt;设置飞行模式或采用 Mock 网络请求的方式来减少不稳定的网络影响测试数据&lt;/li&gt;
&lt;li&gt;退出 iCloud 账号&lt;/li&gt;
&lt;li&gt;使用 Release 的包进行测试&lt;/li&gt;
&lt;li&gt;采用当前主流的设备，而不是最新或者是太久的手机&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;启动阶段分析&#34;&gt;启动阶段分析&lt;/h2&gt;
&lt;p&gt;优化之前我们需要知道 App 启动时有哪些阶段，每个阶段都做了哪些事情，有哪些地方是我们可以优化的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/ios/Phases_of_App_Launch.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以上6个阶段从系统初始化到 App 初始化，再到 UI 视图的创建和布局，还有 App 数据的异步加载等扩展功能,&lt;/p&gt;
&lt;h3 id=&#34;system-interface&#34;&gt;System Interface&lt;/h3&gt;
&lt;p&gt;在 System Interface 阶段时由操作系统控制，主要包含以下任务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加载可执行文件（Mach-O格式）到内存空间&lt;/li&gt;
&lt;li&gt;执行一系列动态链接操作,进行 rebase 指针调整和 bind 符号绑定；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mach-O 文件类型主要分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中间对象文件（MH_OBJECT）&lt;/li&gt;
&lt;li&gt;可执行二进制（MH_EXECUTE）&lt;/li&gt;
&lt;li&gt;VM 共享库文件（MH_FVMLIB）&lt;/li&gt;
&lt;li&gt;Crash 产生的 Core 文件（MH_CORE）&lt;/li&gt;
&lt;li&gt;preload（MH_PRELOAD）&lt;/li&gt;
&lt;li&gt;动态共享库（MH_DYLIB）&lt;/li&gt;
&lt;li&gt;动态链接器（MH_DYLINKER）&lt;/li&gt;
&lt;li&gt;静态链接文件（MH_DYLIB_STUB）符号文件和调试信息（MH_DSYM）这几种。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dyld 动态链接库也是 Mach-o 类型，所以会也会先加载到内存中 ，加载完后dyld会递归加载 App 依赖的动态库，然后执行符号绑定Rebase, Bind。一般应用会加载 100 到 400 个 dylib 文件，幸运是大部分是系统库，且系统会在操作系统启动时计算和缓存系统动态库。&lt;/p&gt;
&lt;h3 id=&#34;runtime-init&#34;&gt;Runtime Init&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Objc 和 Swift 的初始化&lt;/p&gt;
&lt;p&gt;通过_dyld_objc_notify_register注册回调完成相关类的注册，在 image 加载完时初始化语言相关。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加载 category&lt;/p&gt;
&lt;p&gt;在上面语言初始化完之后，会加载所有 category，将 category 的所有方法，协议和属性加载到对应的主类中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用所有+load&lt;/p&gt;
&lt;p&gt;在 image 加载完时，通过load_images 触发，处理该 image 相关的所有+load 方法，按照继承层级依次调用：父类+load→子类+load→category +load，注意 category 的+load 不会覆盖原类。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用 C++的构造函数属性函数 attribute((constructor))&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;uikit-init&#34;&gt;UIKit Init&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;实例化 UIApplication 和 UIApplicationDelegate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开始事件处理和系统集成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Application Init&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这部分是我们熟悉的 UIApplicationDelegate 的几个生命周期调用：&lt;/li&gt;
&lt;li&gt;application:willFinishLaunchingWithOptions:&lt;/li&gt;
&lt;li&gt;application:didFinishLaunchingWithOptions:&lt;/li&gt;
&lt;li&gt;applicationDidBecomeActive:&lt;/li&gt;
&lt;li&gt;scene:willConnectToSession:options:&lt;/li&gt;
&lt;li&gt;sceneWillEnterForeground:&lt;/li&gt;
&lt;li&gt;sceneDidBecomeActive:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;initial-frame-render&#34;&gt;Initial Frame Render&lt;/h3&gt;
&lt;p&gt;首页第一帧的渲染，包含了创建、布局和绘制视图的工作，并把准备好的第一帧提交给渲染层渲染，以下方面会被调用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;loadView
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;viewDidLoad
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;layoutSubviews
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;extended&#34;&gt;Extended&lt;/h3&gt;
&lt;p&gt;Extended 主要是一些扩展的任务，苹果给出的定义是在首屏显示后，App 响应用户的操作的同时，可能存在异步请求数据，等到数据返回后重新渲染首页。&lt;/p&gt;
&lt;h2 id=&#34;各阶段优化&#34;&gt;各阶段优化&lt;/h2&gt;

        
      </description>
    </item>
    
    <item>
      <title>搬瓦工&#43;V2ray科学上网搭建新手指南</title>
      <link>https://www.techchao.com/post/bandwagon-host-v2ray-beginners-guide/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.techchao.com/post/bandwagon-host-v2ray-beginners-guide/</guid>
      <description>
        
          &lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgbwg_logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;一前言&#34;&gt;一、前言&lt;/h2&gt;
&lt;p&gt;相较于目前市面上烂大街的 SSR 翻墙，V2RAY在安全、伪装、稳定等方面几乎是碾压 SSR，本教程介绍了如何搭建和使用 V2Ray ,就算是新手只要按照步骤进行操作一样可以搭建成功。&lt;/p&gt;
&lt;h2 id=&#34;二准备工作&#34;&gt;二、准备工作&lt;/h2&gt;
&lt;p&gt;在搭建工作开始之前，你需要知道你需要经历哪些步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;购买一个 VPS：想要搭建 V2Ray，就必须要拥有一台 VPS。&lt;/li&gt;
&lt;li&gt;获取 VPS 信息：我们必须要知道 VPS IP 地址，root 用户密码，SSH 端口&lt;/li&gt;
&lt;li&gt;安装 Xshell（WINDOWS）iTerm2（macOS）: Xshell 是一个 SSH 客户端，iTerm2 则是 MAC 平台的 SSH客户端。要登录 VPS，当然需要 SSH 客户端&lt;/li&gt;
&lt;li&gt;登录 VPS: 使用 Xshell 配置 VPS SSH 信息，然后登录&lt;/li&gt;
&lt;li&gt;安装 V2Ray:安装过程你可以随意选择你喜欢的传输协议或者配置 Shadowsocks&lt;/li&gt;
&lt;li&gt;V2Ray 安装完成: 此时你可以使用客户端配置 V2Ray 使用了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三vps购买&#34;&gt;三、VPS购买&lt;/h2&gt;
&lt;p&gt;推荐购买&lt;a href=&#34;https://bwh81.net/aff.php?aff=35290&#34;&gt;搬瓦工&lt;/a&gt;，&lt;a href=&#34;https://bwh81.net/aff.php?aff=35290&#34;&gt;搬瓦工&lt;/a&gt;主打小微型 VPS 主机和超低价年付方案。曾经在很长时间内推出过年付不足5美元的超低价 VPS，而且还支持支付宝付款，可以说是对国内用户友好度极佳。 但随着使用人数的增多，&lt;a href=&#34;https://bwh81.net/aff.php?aff=35290&#34;&gt;搬瓦工&lt;/a&gt;目前已经砍掉了所有的低价套餐，目前在售最低的年付套餐时 49.9 美元，在同类VPS中性价比也算能打。&lt;/p&gt;
&lt;p&gt;一般来说，推荐购买 香港线路 或 CN2 GIA 线路，或者哪个便宜选择那个，如果个人建站练手或使用科学上网的话直接购买&lt;a href=&#34;https://bwh81.net/aff.php?aff=35290&amp;amp;pid=57&#34;&gt;年$49.99CN2(入门) ）&lt;/a&gt;,当然如果你使用量比较多或者想要分享给同学和朋友一起用的话，选择合适的套餐即可。直接年付优惠是最大的,又或者你土豪的话，选择最贵的也行。&lt;/p&gt;
&lt;p&gt;销售火爆的套餐：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;套餐&lt;/th&gt;
&lt;th&gt;CPU&lt;/th&gt;
&lt;th&gt;内存&lt;/th&gt;
&lt;th&gt;硬盘&lt;/th&gt;
&lt;th&gt;流量&lt;/th&gt;
&lt;th&gt;带宽   chch&lt;/th&gt;
&lt;th&gt;价格&lt;/th&gt;
&lt;th&gt;购买链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CN2(入门)&lt;/td&gt;
&lt;td&gt;1核&lt;/td&gt;
&lt;td&gt;1GB&lt;/td&gt;
&lt;td&gt;20GB SSD&lt;/td&gt;
&lt;td&gt;1000GB /月&lt;/td&gt;
&lt;td&gt;1Gbps&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;年$49.99&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://bwh81.net/aff.php?aff=35290&amp;amp;pid=57&#34;&gt;点击购买&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CN2 GIA-E&lt;/td&gt;
&lt;td&gt;2核&lt;/td&gt;
&lt;td&gt;1GB&lt;/td&gt;
&lt;td&gt;20GB SSD&lt;/td&gt;
&lt;td&gt;1000GB /月&lt;/td&gt;
&lt;td&gt;2.5Gbps&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;季$49.99 年$169.99&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://bwh81.net/aff.php?aff=35290&amp;amp;pid=87&#34;&gt;点击购买&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HK&lt;/td&gt;
&lt;td&gt;2核&lt;/td&gt;
&lt;td&gt;2GB&lt;/td&gt;
&lt;td&gt;40GB SSD&lt;/td&gt;
&lt;td&gt;500GB /月&lt;/td&gt;
&lt;td&gt;1Gbps&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;季$89.99 年$899.99&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://bwh81.net/aff.php?aff=35290&amp;amp;pid=95&#34;&gt;点击购买&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;四购买步骤&#34;&gt;四、购买步骤&lt;/h2&gt;
&lt;h3 id=&#34;1核对方案配置以及选择时间期限和机房&#34;&gt;1、核对方案配置以及选择时间期限和机房&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgprepay.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们然后会看到上图所示的界面，根据图示我们需要确定选择的方案以及时间，默认是洛杉矶机房，目前我，点击&amp;quot;ADD TO CART&amp;quot;添加购物车。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgbwg_checkout.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;可使用&lt;code&gt;bwh8ZBPVK&lt;/code&gt;优惠码,再减6%.&lt;/del&gt;(该优惠码失效，使用&lt;code&gt;BWH3HYATVBJW &lt;/code&gt;优惠6.58%)
核对我们选择方案的价格，没有问题后点击CHECKOUT结账。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2登录或者新注册搬瓦工账户&#34;&gt;2、登录或者新注册搬瓦工账户&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgbwg_register.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图，如果我们有过账户，可以直接点击&amp;quot;Click here to login&amp;quot;登录以及付款就可以，如果还没有账户则需要注册账户。个人信息不要真实的，但也不能太离谱和乱写字符出来，好歹也要稍微用点拼音。&lt;/p&gt;
&lt;h3 id=&#34;3进入支付选择页面&#34;&gt;3、进入支付选择页面&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgbgw_pau.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择支付宝完成支付。&lt;/p&gt;
&lt;h2 id=&#34;五获取-vps-信息&#34;&gt;五、获取 VPS 信息&lt;/h2&gt;
&lt;p&gt;购买完 VPS 之后，接着我们开始获取 VPS 信息。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择My Services&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgmy_service.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;进入kimivm control panel&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgcontrol_panel.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;获取 IP 地址 和 端口号&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgip_port_main.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;六安装-xshellwindows或-iterm2macos&#34;&gt;六、安装 Xshell（WINDOWS）或 iTerm2（macOS）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;iTerm2下载地址：&lt;a href=&#34;https://iterm2.com/downloads.html&#34;&gt;https://iterm2.com/downloads.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xshell下载地址：&lt;a href=&#34;https://www.netsarang.com/zh/free-for-home-school/&#34;&gt;https://www.netsarang.com/zh/free-for-home-school/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;七登录-vps&#34;&gt;七、登录 VPS&lt;/h2&gt;
&lt;p&gt;以 Xshell登录 VPS 为例，打开软件之后我们需要新建一个窗口SSH.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgxshell_panel.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;拿到我们上一步获取到的 IP 和 端口号，填入输入框&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgpwd_input.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;用户名我们没有特别设置之后，就是默认的root，然后是密码。然后保存之后就可以连接。
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgpwd_input.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;小提示：如果连接后出现提示“WARNING! The remote SSH server rejected X11 forwarding request.”，不要担心。运行下面的命令就可以解决，Xshell界面支持鼠标右键的复制粘贴，按回车键就可以运行命令。（键盘的Ctrl+C、Ctrl+V是无效的哦）完成后重新连接vps服务器即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;yum install xorg-x11-xauth -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;八安装-v2ray&#34;&gt;八、安装 V2Ray&lt;/h2&gt;
&lt;p&gt;输入下面命令回车，你可以复制过去，然后在 Xshell 界面右键或者按 Shift + Insert 即可粘贴。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;bash &amp;lt;(curl -s -L https://git.io/v2ray.sh)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;notices tip&#34;&gt;
    &lt;div class=&#34;label&#34;&gt;Tip&lt;/div&gt;
    &lt;p&gt;如果提示 curl: command not found ，那是因为你的 VPS 没装 Curl
ubuntu/debian 系统安装 Curl 方法: apt-get update -y &amp;amp;&amp;amp; apt-get install curl -y
centos 系统安装 Curl 方法: yum update -y &amp;amp;&amp;amp; yum install curl -y
安装好 curl 之后就能安装脚本了&lt;/p&gt;

  &lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgv2ray_setting.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后选择安装，即是输入 1 回车,&lt;/li&gt;
&lt;li&gt;选择传输协议，如果没有特别的需求，使用默认的 TCP 传输协议即可，直接回车&lt;/li&gt;
&lt;li&gt;然后会提示你“请输入 V2Ray 端口”，端口范围在“1-65535”之间，选择端口，如果没有特别的需求，使用默认的端口即可，直接回车&lt;/li&gt;
&lt;li&gt;是否屏蔽广告，除非你真的需要，一般来说，直接回车即可&lt;/li&gt;
&lt;li&gt;这时会提示你“是否配置 Shadowsocks ”，默认为“N”不配置 Shadowsocks，输入“Y”回车代表配置 Shadowsocks，直接回车即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgv2ray_config.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;按照上图信息设置完毕后“回车”会看到下图提示，&lt;/p&gt;
&lt;p&gt;———- 安装信息 ————-&lt;/p&gt;
&lt;p&gt;V2Ray 传输协议 = TCP&lt;/p&gt;
&lt;p&gt;V2Ray 端口 = 54321&lt;/p&gt;
&lt;p&gt;是否配置 Shadowsocks = 未配置&lt;/p&gt;
&lt;p&gt;———- END ————-&lt;/p&gt;
&lt;p&gt;然后提示你“按 Enter 回车键 继续….或按 Ctrl + C 取消”，我们按“Enter”键回车后安装 V2ray，如图（安装信息可能会因你的配置而变化，不用在乎截图信息）：
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgv2ray_config_confirm.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来就是 V2ray 的安装过程，耐心等待即可，V2ray 安装完成后如图：
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Tech-Chao/blog-images/imgv2ray_success.png&#34; alt=&#34; =100x100&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图的 V2ray 配置信息，用 V2RAY 的客户端配置号上图信息就能正常的科学上网了。&lt;/p&gt;
&lt;p&gt;如果需要生成“vmess URL 链接”或者“二维码图片”输入以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;# vmess URL 链接
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;v2ray url
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;# 二维码图片
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;v2ray qe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;九v2ray-客户端使用教程&#34;&gt;九、V2Ray 客户端使用教程&lt;/h2&gt;
&lt;p&gt;在配置服务器成功之后,我们有了上面的 V2ray 配置信息后，通过下载相应的客户端进行配置后就能够连接外网了。&lt;/p&gt;
&lt;p&gt;目前我在用的是 &lt;strong&gt;Clash&lt;/strong&gt;(颜值在线)，而且除了 iOS 平台下载不方便外，Windows、Mac、Android都已支持。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Mac+ClashX: &lt;a href=&#34;https://github.com/yichengchen/clashX/releases&#34;&gt;clashX-v1.30.1.dmg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows+Clash: &lt;a href=&#34;https://github.com/Fndroid/clash_for_windows_pkg/releases&#34;&gt;Clash.for.windows-0.11.6.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android+Clash: &lt;a href=&#34;https://github.com/Kr328/ClashForAndroid/releases&#34;&gt;ClashForAndroid-v2.0.18.apk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;iOS 用户:目前 App store 上没有免费 V2Ray 客户端，付费的 V2Ray 客户端有：
&lt;ul&gt;
&lt;li&gt;Shadowrocket（俗称小火箭，注意不是 shadowrocket VPN）&lt;/li&gt;
&lt;li&gt;i2Ray&lt;/li&gt;
&lt;li&gt;pepi&lt;/li&gt;
&lt;li&gt;Kitsunebi&lt;/li&gt;
&lt;li&gt;Quantumult（内置免费节点）
因政策原因，这些应用在国内 App Store 上无法搜索到，请从其它地方找一个可用的境外 Apple ID，切换 App Store 然后再下载&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果不知道怎么配置客户端的话，可以在更多中查看配置教程。&lt;/p&gt;
&lt;h2 id=&#34;更多&#34;&gt;更多&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.v2rayssr.com/v2rayssr.html&#34;&gt;V2Ray和SSR有什么区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://v2xtls.org/v2ray%e5%ae%a2%e6%88%b7%e7%ab%af/&#34;&gt;V2Ray 客户端大全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://v2xtls.org/clash-for-windows%E9%85%8D%E7%BD%AEv2ray%E6%95%99%E7%A8%8B/&#34;&gt;Clash for Windows 配置教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://v2xtls.org/clashx%E9%85%8D%E7%BD%AEv2ray%E6%95%99%E7%A8%8B/&#34;&gt;ClashX for Mac 配置教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
        
      </description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://www.techchao.com/post/rich-content/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.techchao.com/post/rich-content/</guid>
      <description>
        
          &lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;instagram-simple-shortcode&#34;&gt;Instagram Simple Shortcode&lt;/h2&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;youtube-privacy-enhanced-shortcode&#34;&gt;YouTube Privacy Enhanced Shortcode&lt;/h2&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;twitter-simple-shortcode&#34;&gt;Twitter Simple Shortcode&lt;/h2&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h2 id=&#34;vimeo-simple-shortcode&#34;&gt;Vimeo Simple Shortcode&lt;/h2&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
